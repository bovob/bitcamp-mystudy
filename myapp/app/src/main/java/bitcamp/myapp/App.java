/*
 * This source file was generated by the Gradle 'init' task
 */
package bitcamp.myapp;
import java.util.Scanner;

public class App {
    // Scanner
    static Scanner scanner = new Scanner(System.in);

    // Menu
    static String[] menus = new String[]{
        "회원",
        "팀",
        "프로젝트",
        "게시판",
        "도움말",
        "종료",
        "테스트"};

    public static void main(String[] args) {
        printMenu();    // 메서드에 묶인 코드를 실행하는 것을 "메서드를 호출(call)이라 부른다."

        int menuNo;
        String input;

        while (true) {

            try {
                input = prompt();

                if (input.equals("menu")) {
                    // 메뉴 리스트 다시 출력
                    printMenu();
                    continue; // 다시 입력을 받기 위해 반복문의 처음으로 이동
                }

                menuNo = Integer.parseInt(input);
                String menuTitle = getMenuTitle(menuNo);    // 설명하는 변수 켄트 벡의 Tidy First

                if (menuTitle == null){
                    System.out.println("유효한 메뉴 번호가 아닙니다.");

                } else if (menuTitle.equals("종료")) {
                    break;

                } else {
                    System.out.println(menuTitle);
                }

            } catch (NumberFormatException e) {
                System.out.println("숫자로 메뉴 번호를 입력하세요.");
                System.out.println("Exception Error : NumberFormatException");
            }
        }
        System.out.println("종료합니다.");
        scanner.close();  // Close the scanner
    }

    static void printMenu() {
        // ANSI 이스케이프 문자
        String boldAnsi = "\033[1m";
        String redAnsi = "\033[31m";
        String resetAnsi = "\033[0m";

        // Title & Line
        String appTitle = boldAnsi + "[팀 프로젝트 관리 시스템]" + resetAnsi;
        String line = boldAnsi + "----------------------------------------------" + resetAnsi;

        // Print
        System.out.println(line);
        System.out.println(appTitle + "\n");

        for (int i = 0; i < menus.length; i++) {

            if (menus[i].equals("종료")) {
                System.out.printf("%s%d. %s%s \n", (boldAnsi + redAnsi), (i + 1), menus[i],
                    resetAnsi);
            } else {
                System.out.printf("%d. %s\n", (i + 1), menus[i]);
            }
        }
        System.out.println(line);
    }

    static String prompt() {
        System.out.print("> ");  // Prompt for user input
        return scanner.nextLine();
    }

    static boolean isValidateMenu(int menuNo){
        return menuNo >= 1 && menuNo <= menus.length;
    }

    static String getMenuTitle(int menuNo){
        if (isValidateMenu(menuNo)) {
            return menus[menuNo - 1];
        }
        return null;

//        return isValidateMenu(menuNo) ? menus[menuNo - 1] : null;
    }
}